model StableWelfareOpt
  options noimplicit
  uses "mmxprs"

  declarations
    n = 40
    m = 40

    students: array(1..m, 1..n) of integer
    schools: array(1..n, 1..m) of integer ! Not actually used when maximizing student welfare

    x: array(1..m, 1..n) of mpvar

    student_capacity: array(1..n) of linctr
    school_capacity: array(1..m) of linctr
    stability: array(1..m, 1..n) of linctr

    welfare: linctr

  end-declarations

  initializations from "data.dat"
    students
    schools
  end-initializations

  forall(j in 1..m, i in 1..n) x(j, i) is_binary

  forall(i in 1..n) student_capacity(i):= sum(j in 1..m) x(j, i) <= 1
  forall(j in 1..m) school_capacity(j):= sum(i in 1..n) x(j, i) <= 1    ! Assuming schools have unit capacities
  forall(j in 1..m, i in 1..n) stability(j, i):= x(j, i) + sum(k in 1..n) x(j, k) + sum(l in 1..m) x(l, i) >= 1

  welfare:= - sum(j in 1..m, i in 1..n) x(j, i) * students(j, i)

  writeln("Begin running model")
  maximize(welfare)
  writeln("End running model")

  writeln("Students and the schools they are matched to")
  forall(j in 1..m) do
    forall(i in 1..n | getsol(x(j, i)) >= .9) writeln(i, " ", j)
  end-do

  writeln("Students and their ratings of the schools they are matched to")
  forall(j in 1..m) do
    forall(i in 1..n | getsol(x(j, i)) >= .9) writeln(i, " ", students(j, i))
  end-do

  fopen("StableWelfareOpt_results.txt", F_OUTPUT)
    forall(j in 1..m) do
      forall(i in 1..n | getsol(x(j, i)) >= .9) writeln(students(j, i))
    end-do
  fclose(F_OUTPUT)

end-model